{
  "name": "Python 3 Data Science & Cybersecurity Dev Container",
  "dockerComposeFile": "docker-compose.yml",
  "service": "python-dev",
  "workspaceFolder": "/workspace",
  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
        "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
        "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
        "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
        "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
        "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
        "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
        "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
        "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
        "jupyter.jupyterServerType": "local",
        "files.watcherExclude": {
          "**/.*": true
        }
      },
      // Essential VSCode extensions for Python, Data Science, and Cybersecurity
      "extensions": [
        // Python Development
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.flake8",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.pylint",
        // Jupyter & Data Science
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow",
        // GitHub Integration & AI
        "github.copilot",
        "github.copilot-chat",
        "eamodio.gitlens",
        // Code Quality & Formatting
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-python.autopep8",
        // General Development
        "ms-vscode.vscode-typescript-next",
        "ms-vscode-remote.remote-containers",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode-remote.remote-wsl",
        // Documentation & Markdown
        "yzhang.markdown-all-in-one",
        "shd101wyy.markdown-preview-enhanced",
        // Docker & Infrastructure
        "ms-azuretools.vscode-docker",
        // Cybersecurity Specific
        "ms-vscode.hexdump",
        "davidanson.vscode-markdownlint",
        "ms-python.mypy-type-checker"
      ]
    }
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [
    8888,
    8000,
    5000,
    3000
  ],
  // Configure port forwarding labels
  "portsAttributes": {
    "8888": {
      "label": "Jupyter Lab",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "Development Server",
      "onAutoForward": "notify"
    }
  },
  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "pip install --user -r requirements.txt && echo 'Dev container setup complete!'",
  // Use 'postStartCommand' to run commands every time the container starts
  "postStartCommand": "echo 'Welcome to your Python Data Science & Cybersecurity Dev Container!'",
  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "vscode",
  // Set container specific settings
  "containerEnv": {
    "PYTHONPATH": "/workspace",
    "JUPYTER_ENABLE_LAB": "yes"
  },
  // Configure features to install additional tools
  // Note: Git, GitHub CLI, and Node are already installed in our custom Dockerfile
  // "features": {},
  // Mount the workspace and configure bind mounts
  // Note: Workspace mounting is handled by docker-compose.yml
  "mounts": []
}